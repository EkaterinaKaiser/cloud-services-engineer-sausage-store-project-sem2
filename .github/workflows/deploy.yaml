name: Build and Deploy Sausage Store

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME_BACKEND: sausage-store-backend
  IMAGE_NAME_FRONTEND: sausage-store-frontend
  IMAGE_NAME_BACKEND_REPORT: sausage-store-backend-report

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata for backend
      id: meta-backend
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_BACKEND }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Extract metadata for frontend
      id: meta-frontend
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_FRONTEND }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Extract metadata for backend-report
      id: meta-backend-report
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_BACKEND_REPORT }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ steps.meta-backend.outputs.tags }}
        labels: ${{ steps.meta-backend.outputs.labels }}
        build-args: |
          VERSION=${{ github.sha }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}

    - name: Build and push backend-report image
      uses: docker/build-push-action@v4
      with:
        context: ./backend-report
        push: true
        tags: ${{ steps.meta-backend-report.outputs.tags }}
        labels: ${{ steps.meta-backend-report.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Deploy to Kubernetes
      run: |
        # Обновляем образы в Helm values
        sed -i "s|repository: .*|repository: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_BACKEND }}|g" sausage-store-chart/values.yaml
        sed -i "s|tag: .*|tag: ${{ github.sha }}|g" sausage-store-chart/values.yaml
        
        # Выполняем миграции базы данных
        echo "Выполнение миграций базы данных..."
        # Здесь можно добавить выполнение миграций через kubectl или отдельный job
        
        # Деплой через Helm
        helm upgrade --install sausage-store ./sausage-store-chart \
          --set backend.image.repository=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_BACKEND }} \
          --set backend.image.tag=${{ github.sha }} \
          --set frontend.image.repository=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_FRONTEND }} \
          --set frontend.image.tag=${{ github.sha }} \
          --set backend-report.image.repository=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_BACKEND_REPORT }} \
          --set backend-report.image.tag=${{ github.sha }}

    - name: Run database migrations
      run: |
        # Создаем временный pod для выполнения миграций
        kubectl run migration-pod --image=postgres:13 --rm -i --restart=Never -- \
          psql -h postgres-service -U postgres -d sausage_store -f /migrations/V001__create_tables.sql
        # Добавить остальные миграции по аналогии